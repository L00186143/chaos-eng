name: Terraform Deployment with Chaos Experiment

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: "1.6.2"

    - name: Configure AWS Credentials
      run: |
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan

    - name: Terraform Apply
      run: terraform apply -auto-approve | tee output.txt

    - name: Upload Terraform Output as Artifact
      uses: actions/upload-artifact@v2
      with:
        name: terraform-output
        path: output.txt

    - name: Get EC2 Instance IP
      id: get_instance_ip
      run: echo "::set-output name=ip::$(terraform output ec2_instance_private_ip)"

  chaos-experiment:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Download Terraform Output Artifact
      uses: actions/download-artifact@v2
      with:
        name: terraform-output

    - name: Display content of output.txt
      run: cat output.txt

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install Python dependencies (Boto3)
      run: pip install boto3

    - name: Run Chaos Experiment Script
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: 'eu-north-1'
      run: python experiment/chaos-experiment.py

    - name: Initialize Metrics File
      run: echo "" > metrics.prom

    - name: Append Terraform Apply Duration Metric
      run: echo "terraform_apply_duration_seconds{job=\"terraform_deploy\"} $DURATION" >> metrics.prom
      env:
        DURATION: 45.5

    # Add more steps that append metrics...

    - name: Install system dependencies
      run: sudo apt-get install -y libsnappy-dev

    - name: Install Python dependencies
      run: pip install python-snappy requests

    - name: Compress and Post Metrics to Grafana Cloud Prometheus
      run: python compress-and-post-metrics.py metrics.prom ${{ secrets.PROMETHEUS_REMOTE_WRITE_URL }} ${{ secrets.GRAFANA_USERNAME }} ${{ secrets.GRAFANA_PASSWORD }}
      env:
        PROMETHEUS_REMOTE_WRITE_URL: ${{ secrets.PROMETHEUS_REMOTE_WRITE_URL }}
        GRAFANA_USERNAME: ${{ secrets.GRAFANA_USERNAME }}
        GRAFANA_PASSWORD: ${{ secrets.GRAFANA_PASSWORD }}


