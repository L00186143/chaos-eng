name: Terraform Deployment with Chaos Experiment

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    outputs:
      instance_ip: ${{ steps.get_ip.outputs.ip }}
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: "1.6.2"

    - name: Configure AWS Credentials
      run: |
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan

    - name: Terraform Apply
      run: terraform apply -auto-approve | tee output.txt

    - name: Upload Terraform Output as Artifact
      uses: actions/upload-artifact@v2
      with:
        name: terraform-output
        path: output.txt


    - name: Save EC2 Instance Public IP to File
      run: |
        terraform output -raw ec2_instance_public_ip | grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' > ec2_ip.txt
        more ec2_ip.txt

    - name: Upload EC2 IP as Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ec2-ip
        path: ec2_ip.txt

      
      
      

  chaos-experiment:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Download Terraform Output Artifact
      uses: actions/download-artifact@v2
      with:
        name: terraform-output

    - name: Display content of output.txt
      run: cat output.txt

    - name: Download EC2 IP Artifact
      uses: actions/download-artifact@v2
      with:
        name: ec2-ip

    - name: Read EC2 IP from File
      run: |
        IP=$(cat ec2_ip.txt)
        echo "HOST is $IP"

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install Python dependencies for chaos tests
      run: |
        pip install boto3
        pip install paramiko

    - name: Echo HOST Variable Test
      run: |
          IP=$(head -n 1 ec2_ip.txt | xargs)
          echo "HOST=$IP" >> $GITHUB_ENV
          echo "HOST is $IP"
      
  
    - name: Run IDS Chaos Attack Simulation
      env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'eu-north-1'
          USERNAME: ec2-user
          PASSWORD: 'incorrect-password'
      run: python experiment/simulate-attack.py
      

    - name: Run Chaos Experiment Script
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: 'eu-north-1'
      run: python experiment/chaos-experiment.py


    



